<?xml version="1.0" encoding="utf-8"?>

<android.support.v4.widget.DrawerLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/drawer_layout_main"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".activity.MainActivity"
    tools:openDrawer="start">

    <!-- 第一个位置 -->
    <!-- 你的主界面内容，必须放置在Drawerlayout中的第一个位置根据自己的需要来放置控件，
         例如：LinearLayout布局或者RelativeLayout布局；也可以是单个控件，如 TextView等  -->
    <!-- CoordinatorLayout是这次新添加的一个增强型的FrameLayout，通过它可以实现很多东西：
            例如：
                1.界面向上滚动逐渐隐藏Toolbar；
                2.在其中可以放置浮动的View，就像Floating Action Button。-->
    <android.support.design.widget.CoordinatorLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:fitsSystemWindows="true"
        >

        <!-- AppBarLayout跟它的名字一样，把容器类的组件全部作为AppBar。将AppBarLayout放在CoordinatorLayout中，
             就可以实现滚动效果。-->
        <android.support.design.widget.AppBarLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            >

            <include layout="@layout/toolbar"/>

            <!-- Tabs选项卡，和ViewPager搭配使用可以增大界面的内容展示量，实现各种个性化分类内容展示而不互相干扰！
                 Google在Design support library中提供官方的Tab组件，它就是TabLayout。

                 有以下常用属性：
                    app:tabGravity="fill"  表示TabLayout中的Tabs要占满屏幕的width；
                    app:tabSelectedTextColor：Tab被选中字体的颜色；
                    app:tabTextColor：Tab未被选中字体的颜色；
                    app:tabIndicatorColor：Tab指示器下标的颜色；-->
            <android.support.design.widget.TabLayout
                android:id="@+id/tabLayout_main"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                app:layout_scrollFlags="scroll|enterAlways"
                app:tabGravity="fill"
                app:tabIndicatorColor="@color/colorTextPrimary"
                app:tabMode="scrollable"
                app:tabSelectedTextColor="@color/colorTextPrimary"
                app:tabTextColor="@color/colorTextSecondary"
                />
            <android.support.v4.view.ViewPager
                android:id="@+id/viewpager_main"
                android:layout_width="match_parent"
                android:layout_height="match_parent"
                app:layout_behavior="@string/appbar_scrolling_view_behavior"
                />
        </android.support.design.widget.AppBarLayout>



        <android.support.v4.widget.NestedScrollView
            android:id="@+id/myScrollingContent_main"
            android:layout_width="match_parent"
            android:layout_height="match_parent">

        </android.support.v4.widget.NestedScrollView>

    </android.support.design.widget.CoordinatorLayout>
    <!-- 第二个位置 -->
    <!-- 用来放Drawerlayout中的内容，这里使用NavigationView来实现类似Google pLay中的侧滑栏效果，
    必须在build.gradle中添加compile 'com.android.support:design:22.2.0'；另外，如果不需要NavigationView效果，
    也可以放置一个普通布局文件就是一个普通的侧滑栏了。-->

    <!-- 注意：如果使用NavigationView（其他控件也是一样）的特有属性，需要加上命名空间：
                xmlns:app="http://schemas.android.com/apk/res-auto"；
        另外，一定要添加android:layout_gravity="left"属性。 -->

    <!-- 属性解析：
            app:headerLayout：       NavigationView中头部的head部分的布局，是自己实现的；
            app:menu：               指定Nav中的Menu布局，就是自己写Menu中的按钮，要放在res/menu/文件夹下；
            app:itemTextColor：      用来设置Nav中，menu item的颜色选择器。
            还有一些属性：           和itemTextColor用法一样
            app:itemIconTint:
            app:itemBackground: -->
    <android.support.design.widget.NavigationView
        android:id="@+id/navgation_view_main"
        android:layout_width="wrap_content"
        android:layout_height="match_parent"
        android:layout_gravity="start"
        android:layout_marginTop="68dp"
        android:background="@mipmap/nav_bg"
        app:headerLayout="@layout/nav_main"
        app:itemIconTint="@color/colorTextPrimary"
        app:itemTextColor="@color/colorTextPrimary"
        app:menu="@menu/activity_main_drawer"/>

</android.support.v4.widget.DrawerLayout>


